{"version":3,"file":"injectedScript.js","mappings":"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","sources":["webpack://playcanvas-extension/./src/injectedScript.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst componentDeleteAttributes = [\r\n    {\r\n        component: \"model\",\r\n        attributes: [\"lightmapped\", \"lightmapSizeMultiplier\", \"castShadowsLightMap\", \"lightMapped\", \"lightMapSizeMultiplier\", \"isStatic\", \"layers\", \"batchGroupId\"]\r\n    }\r\n]\r\n\r\nwindow.addEventListener(\"FIND_ENTITY\", function (e) {\r\n    let method = e.detail.method;\r\n    let value = e.detail.value;\r\n\r\n    switch (method) {\r\n        case \"tag\":\r\n            findEnitiesByTag(value);\r\n            break;\r\n        case \"name\":\r\n            findEntitiesByName(value);\r\n            break;\r\n        case \"regex\":\r\n            findEntitiesByRegex(value);\r\n            break;\r\n        default:\r\n            console.error(\"Invalid find method\");\r\n            return;\r\n    }\r\n});\r\n\r\nwindow.addEventListener(\"EXPORT_ENTITIES\", function (e) {\r\n    let exportType = e.detail.exportType;\r\n    let downloadFile = e.detail.downloadFile;\r\n    console.log(exportType, downloadFile);\r\n    exportObjects(exportType === \"hierarchy\", downloadFile);\r\n});\r\n\r\nfunction findEnitiesByTag(tags) {\r\n    let entitiesByTag = editor.entities.root.listByTag(tags.split(\",\"));\r\n    if (entitiesByTag.length === 0) {\r\n        console.log(`No entities found with tag: ${tag}`);\r\n        return;\r\n    }\r\n    editor.selection.clear();\r\n    entitiesByTag.forEach((entity) => editor.selection.add(entity));\r\n    window.dispatchEvent(\r\n        new CustomEvent(\"FIND_ENTITY_RESULT\", { detail: entitiesByTag.length })\r\n    );\r\n}\r\n\r\nfunction findEntitiesByName(name) {\r\n    let allEntities = editor.entities.list();\r\n    let entitiesByName = allEntities.filter(\r\n        (entity) => entity.viewportEntity.name === name\r\n    );\r\n    if (entitiesByName.length === 0) {\r\n        console.log(`No entities found with name: ${name}`);\r\n        return;\r\n    }\r\n    editor.selection.clear();\r\n    entitiesByName.forEach((entity) => editor.selection.add(entity));\r\n    window.dispatchEvent(\r\n        new CustomEvent(\"FIND_ENTITY_RESULT\", { detail: entitiesByName.length })\r\n    );\r\n}\r\n\r\nfunction findEntitiesByRegex(regexString) {\r\n    let allEntities = editor.entities.list();\r\n    let entitiesByRegex = allEntities.filter((entity) =>\r\n        entity.viewportEntity.name.match(regexString)\r\n    );\r\n    if (entitiesByRegex.length === 0) {\r\n        console.log(`No entities found with regex: ${regexString}`);\r\n        return;\r\n    }\r\n    editor.selection.clear();\r\n    entitiesByRegex.forEach((entity) => editor.selection.add(entity));\r\n    window.dispatchEvent(\r\n        new CustomEvent(\"FIND_ENTITY_RESULT\", {\r\n            detail: entitiesByRegex.length,\r\n        })\r\n    );\r\n}\r\n\r\nfunction exportObjects(exportHierarchy = true, downloadFile = false) {\r\n    let entityList = editor.selection.items;\r\n    let jsonString;\r\n    if (entityList.length === 0) {\r\n        alert(\"No entities selected\");\r\n        return;\r\n    } else if (entityList.length === 1) {\r\n        jsonString = exportHierarchy\r\n            ? entityList[0].jsonHierarchy()\r\n            : entityList[0].json();\r\n        cleanEntity(jsonString);\r\n        jsonString = JSON.stringify(jsonString);\r\n    } else {\r\n        let jsonList = [];\r\n        entityList.forEach((entity) => {\r\n            let entityJson = exportHierarchy\r\n                ? entity.jsonHierarchy()\r\n                : entity.json();\r\n            cleanEntity(entityJson);\r\n            jsonList.push(entityJson);\r\n        });\r\n        jsonString = JSON.stringify(jsonList);\r\n    }\r\n    if (downloadFile) {\r\n        let name =\r\n            entityList.length === 1\r\n                ? entityList[0].viewportEntity.name\r\n                : \"export\";\r\n        download(jsonString, `${name}.json`, \"application/json\");\r\n    } else {\r\n        writeToClipboard(jsonString);\r\n        alert(\"Copied to clipboard\");\r\n    }\r\n}\r\n\r\nfunction download(data, filename, type) {\r\n    let file = new Blob([data], { type: type });\r\n    if (window.navigator.msSaveOrOpenBlob) {\r\n        window.navigator.msSaveOrOpenBlob(file, filename);\r\n    } else {\r\n        let a = document.createElement(\"a\");\r\n        let url = URL.createObjectURL(file);\r\n        a.href = url;\r\n        a.download = filename;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        setTimeout(function () {\r\n            document.body.removeChild(a);\r\n            window.URL.revokeObjectURL(url);\r\n        }, 0);\r\n    }\r\n}\r\n\r\nfunction writeToClipboard(text) {\r\n    let textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nfunction cleanEntity(entity) {\r\n    delete entity.parent;\r\n    delete entity.resource_id;\r\n\r\n    let uneabledComponents = [];\r\n    for (let componentName in entity.components) {\r\n        if (entity.components.hasOwnProperty(componentName)) {\r\n            if (!entity.components[componentName].enabled) {\r\n                uneabledComponents.push(componentName);\r\n            }\r\n            else {\r\n                cleanComponent(componentName, entity.components[componentName]);\r\n            }\r\n        }\r\n    }\r\n    uneabledComponents.forEach((componentName) => {\r\n        delete entity.components[componentName];\r\n    });\r\n\r\n    if (entity.components && entity.components.script) {\r\n        let scripts = entity.components.script.scripts;\r\n        entity.components.script = scripts;\r\n        for (let scriptName in scripts) {\r\n            let script = scripts[scriptName];\r\n            let attributes = script.attributes;\r\n            replaceAssetIdsWithNames(attributes);\r\n            script = attributes;\r\n            scripts[scriptName] = script;\r\n        }\r\n    }\r\n    else {\r\n      for(let component in entity.components) {\r\n        if (entity.components.hasOwnProperty(component)) {\r\n          let attributes = entity.components[component];\r\n          replaceAssetIdsWithNames(attributes);\r\n        }\r\n      }\r\n    }\r\n\r\n    if(entity.template_id) {\r\n        delete entity.template_id;\r\n    }\r\n    if(entity.template_ent_ids) {\r\n        delete entity.template_ent_ids;\r\n    }\r\n\r\n    if (entity.children) {\r\n        entity.children.forEach((child) => cleanEntity(child));\r\n    }\r\n}\r\n\r\nfunction replaceAssetIdsWithNames(attributes) {\r\n    let removeList = [];\r\n    for (let key in attributes) {\r\n        if (attributes.hasOwnProperty(key)) {\r\n            if (Array.isArray(attributes[key])) {\r\n                attributes[key] = attributes[key].map((value) => {\r\n                    if (isAssetId(value)) {\r\n                        let assetName = getAssetName(value);\r\n                        if (assetName) {\r\n                            if (\r\n                                getAssetType(value) !== \"json\" &&\r\n                                getAssetType(value) !== \"material\"\r\n                            ) {\r\n                                assetName = removeFilenameExtension(assetName);\r\n                            } else if (getExtension(assetName) !== \"json\") {\r\n                                assetName = `${assetName}.json`;\r\n                            }\r\n                        }\r\n\r\n                        return assetName;\r\n                    }\r\n                    return value;\r\n                });\r\n            } else if (isAssetId(attributes[key])) {\r\n                let assetName = getAssetName(attributes[key]);\r\n                if (assetName) {\r\n                    if (\r\n                        getAssetType(attributes[key]) !== \"json\" &&\r\n                        getAssetType(attributes[key]) !== \"material\"\r\n                    ) {\r\n                        assetName = removeFilenameExtension(assetName);\r\n                    } else if (getExtension(assetName) !== \"json\") {\r\n                        assetName = `${assetName}.json`;\r\n                    }\r\n                }\r\n\r\n                attributes[key] = assetName;\r\n            } else if (isEntityId(attributes[key])) {\r\n                removeList.push(key);\r\n            }\r\n        }\r\n    }\r\n    removeList.forEach((key) => delete attributes[key]);\r\n}\r\n\r\nfunction getAssetName(assetId) {\r\n    let asset = editor.assets.get(assetId);\r\n    if (asset) {\r\n        return asset.json().name;\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction getExtension(name) {\r\n    return name.split(\".\").pop();\r\n}\r\n\r\nfunction getAssetType(assetId) {\r\n    let asset = editor.assets.get(assetId);\r\n    if (asset) {\r\n        return asset.json().type;\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction removeFilenameExtension(filename) {\r\n    return filename.replace(/\\.[^/.]+$/, \"\");\r\n}\r\n\r\nfunction isAssetId(id) {\r\n    return `${id}`.match(/[\\d]{8,10}/)?.length === 1;\r\n}\r\n\r\nfunction isEntityId(id) {\r\n    return (\r\n        `${id}`.match(\r\n            /[\\d|\\w]{8}-[\\d|\\w]{4}-4[\\d|\\w]{3}-[\\d|\\w]{4}-[\\d|\\w]{12}/\r\n        )?.length === 1\r\n    );\r\n}\r\n\r\nfunction cleanComponent(name, component) {\r\n    componentDeleteAttributes.forEach((c) => {\r\n        if (c.component === name) {\r\n            c.attributes.forEach((attribute) => {\r\n                delete component[attribute];\r\n            });\r\n        }\r\n    });\r\n}\r\n"],"names":["componentDeleteAttributes","component","attributes","cleanEntity","entity","parent","resource_id","uneabledComponents","componentName","components","hasOwnProperty","enabled","cleanComponent","push","forEach","script","scripts","scriptName","replaceAssetIdsWithNames","template_id","template_ent_ids","children","child","removeList","key","Array","isArray","map","value","isAssetId","assetName","getAssetName","getAssetType","removeFilenameExtension","getExtension","id","match","length","assetId","asset","editor","assets","get","json","name","split","pop","type","filename","replace","c","attribute","window","addEventListener","e","method","detail","tags","entitiesByTag","entities","root","listByTag","selection","clear","add","dispatchEvent","CustomEvent","console","log","tag","findEnitiesByTag","entitiesByName","list","filter","viewportEntity","findEntitiesByName","regexString","entitiesByRegex","findEntitiesByRegex","error","exportType","downloadFile","exportHierarchy","jsonString","entityList","items","jsonHierarchy","JSON","stringify","jsonList","entityJson","data","file","Blob","navigator","msSaveOrOpenBlob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","text","textArea","focus","select","execCommand","writeToClipboard","alert","exportObjects"],"sourceRoot":""}